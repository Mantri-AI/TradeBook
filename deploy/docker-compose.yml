version: '3.8'

services:
  # Main Flask application
  TradeBook:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: TradeBook
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/mantri_trade_book
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    volumes:
      - ../instance:/app/instance
      - app_logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - mantri-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    container_name: TradeBook-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=mantri_trade_book
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mantri-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: TradeBook-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - mantri-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: TradeBook-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - TradeBook
    networks:
      - mantri-network

volumes:
  postgres_data:
  redis_data:
  app_logs:

networks:
  mantri-network:
    driver: bridge